{"version":3,"sources":["components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactsForm/ContactsForm.styled.jsx","components/ContactsForm/ContactsForm.jsx","components/ContactsList/ContactsList.styled.jsx","components/ContactsList/ContactsList.jsx","components/Styles.jsx","components/App.jsx","index.js"],"names":["Label","styled","label","Input","input","Filter","handleChange","filter","onChange","type","name","value","Form","form","Button","button","ContactForm","submitForm","useState","setName","number","setNumber","evt","target","reset","onSubmit","preventDefault","htmlFor","id","pattern","title","required","List","ul","Item","li","ContactList","contacts","onDelete","map","contact","onClick","Styles","createGlobalStyle","MainTitle","h1","SecondaryTitle","h2","PhonebookWrap","div","App","localStorage","getItem","parsedContacts","JSON","parse","setContacts","setFilter","useEffect","setItem","stringify","normalazedFind","toLowerCase","find","alert","nanoid","includes","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.7889f6d1.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 20px;\n  font-size: 22px;\n  line-height: 1.25;\n`;\n\nexport const Input = styled.input`\n  margin-top: 20px;\n  width: 210px;\n  font-size: 15px;\n  line-height: 1.25;\n  border-radius: 5px;\n`;\n","import PropTypes from 'prop-types';\nimport { Label, Input } from './Filter.styled';\n\nexport const Filter = ({ handleChange, filter }) => {\n  return (\n    <Label>\n      Find contacts by name\n      <Input onChange={handleChange} type=\"text\" name=\"filter\" value={filter} />\n    </Label>\n  );\n};\n\nFilter.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 0 20px;\n  border: 2px solid gray;\n`;\n\nexport const Label = styled.label`\n  margin-top: 10px;\n  font-size: 20px;\n  line-height: 1.25;\n`;\n\nexport const Input = styled.input`\n  margin-top: 15px;\n  font-size: 16px;\n  line-height: 1.25;\n  border-radius: 5px;\n`;\n\nexport const Button = styled.button`\n  margin: 15px auto 10px auto;\n  padding: 10px;\n  width: 150px;\n  font-size: 15px;\n  line-height: 1.25;\n  background-color: yellow;\n  border: none;\n  border-radius: 15px;\n  cursor: pointer;\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Label, Input, Button } from './ContactsForm.styled';\n\nexport function ContactForm({ submitForm }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    submitForm(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label htmlFor=\"contact_name\">Name</Label>\n      <Input\n        onChange={handleChange}\n        id=\"contact_name\"\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Mykola, Genka Metla, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <Label htmlFor=\"contact_number\">Number</Label>\n      <Input\n        onChange={handleChange}\n        value={number}\n        id=\"contact_number\"\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n}\n\nContactForm.propTypes = {\n  submitForm: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 20px;\n  background-color: gray;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n  margin: 20px 10px;\n`;\n\nexport const Button = styled.button`\n  padding: 3px;\n  width: 100px;\n  font-weight: 400;\n  font-size: 15px;\n  line-height: 1.25;\n  background-color: yellow;\n  border: none;\n  border-radius: 15px;\n  cursor: pointer;\n`;\n","import PropTypes from 'prop-types';\nimport { List, Button, Item } from './ContactsList.styled';\n\nexport const ContactList = ({ contacts, onDelete }) => {\n  return (\n    <List>\n      {contacts.map(contact => (\n        <Item key={contact.id}>\n          <p>\n            {contact.name} : {contact.number}\n          </p>\n          <Button type=\"button\" onClick={() => onDelete(contact.id)}>\n            Delete\n          </Button>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n","import { createGlobalStyle } from 'styled-components';\nimport styled from 'styled-components';\n\nexport const Styles = createGlobalStyle`\n* {\n  box-sizing: border-box;\n  }\n  html {\n    scroll-behavior: smooth;\n  }\n  body {\n    min-height: 100vh;\n    margin: 0;\n    font-family: 'Roboto', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Oxygen', 'Ubuntu',\n    'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\n    background-color: #fff;\n    color: #010101;\n    line-height: 1.5;\n    scroll-behavior: smooth;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n  img {\n    display: block;\n    max-width: 100%;\n  }\n  ul {\n    padding: 0;\n    margin: 0;\n    list-style: none;\n  }\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p {\n    margin: 0;\n  }\n`;\nexport const MainTitle = styled.h1`\n  padding-top: 30px;\n  padding-bottom: 30px;\n  font-size: 30px;\n  line-height: 1.25;\n  text-align: center;\n  color: black;\n`;\n\nexport const SecondaryTitle = styled.h2`\n  padding-top: 30px;\n  padding-bottom: 15px;\n  font-size: 30px;\n  line-height: 1.25;\n  text-align: center;\n  color: black;\n`;\n\nexport const PhonebookWrap = styled.div`\n  width: 400px;\n  margin: 0 auto;\n  background-color: gray;\n`;\n","import { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport { Filter } from './Filter/Filter';\nimport { ContactForm } from './ContactsForm/ContactsForm';\nimport { ContactList } from './ContactsList/ContactsList';\nimport { Styles, PhonebookWrap, MainTitle, SecondaryTitle } from './Styles';\n\nexport function App() {\n  const [contacts, setContacts] = useState(() => {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    return parsedContacts ?? [];\n  });\n\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const handleChange = evt => {\n    setFilter(evt.target.value);\n  };\n\n  const getSubmitForm = (name, number) => {\n    const normalazedFind = name.toLowerCase();\n\n    const isName = contacts.find(\n      contact => contact.name.toLowerCase() === normalazedFind\n    );\n    if (isName) {\n      return alert(`${name} is already in contacts.`);\n    }\n    setContacts([{ name, number, id: nanoid(5) }, ...contacts]);\n  };\n  const getVisibleContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n  const deleteName = id => {\n    setContacts(contacts.filter(contact => contact.id !== id));\n  };\n\n  return (\n    <>\n      <Styles />\n      <PhonebookWrap>\n        <MainTitle>Phonebook</MainTitle>\n        <ContactForm submitForm={getSubmitForm} />\n        <SecondaryTitle>Contacts</SecondaryTitle>\n        <Filter handleChange={handleChange} filter={filter} />\n        <ContactList contacts={getVisibleContacts()} onDelete={deleteName} />\n      </PhonebookWrap>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { App } from 'components/App';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}